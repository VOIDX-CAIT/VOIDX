<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>VOIDX | Премиум Шифратор</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    :root {
      --void: #000;
      --x: #fff;
      --pulse: #0ff;
      --dark: #0a0a14;
      --accent: #8a2be2;
      --gold: #ffd700;
      --silver: #c0c0c0;
      --transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    body {
      font-family: 'Segoe UI', 'Roboto', sans-serif;
      background: radial-gradient(circle at center, #000 0%, #0d0d1a 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--x);
      overflow-x: hidden;
      position: relative;
    }

    /* Эффект частиц */
    .particles {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: -1;
    }

    .particle {
      position: absolute;
      width: 2px;
      height: 2px;
      background: var(--pulse);
      border-radius: 50%;
      animation: particleAnim 10s linear infinite;
    }

    @keyframes particleAnim {
      0% {
        transform: translateY(0) translateX(0);
        opacity: 0;
      }
      10% {
        opacity: 1;
      }
      90% {
        opacity: 1;
      }
      100% {
        transform: translateY(-100vh) translateX(calc((var(--x) - 0.5) * 100vw));
        opacity: 0;
      }
    }

    /* Контейнер */
    .container {
      background: linear-gradient(145deg, rgba(15, 15, 30, 0.9), rgba(10, 10, 20, 0.95));
      border-radius: 20px;
      width: 95%;
      max-width: 700px;
      position: relative;
      z-index: 10;
      backdrop-filter: blur(12px);
      box-shadow: 
        0 0 40px rgba(138, 43, 226, 0.3),
        0 0 80px rgba(0, 255, 255, 0.1),
        inset 0 0 30px rgba(255, 255, 255, 0.05);
      border: 1px solid rgba(138, 43, 226, 0.3);
      padding: 2.5rem;
      overflow: hidden;
      margin: 2rem;
    }

    /* Абстрактные формы */
    .abstract-shapes {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: -1;
    }

    .shape {
      position: absolute;
      border-radius: 50%;
      background: radial-gradient(circle, var(--accent), transparent 70%);
      opacity: 0.1;
      filter: blur(40px);
    }

    .shape:nth-child(1) {
      width: 300px;
      height: 300px;
      top: -100px;
      left: -100px;
    }

    .shape:nth-child(2) {
      width: 200px;
      height: 200px;
      bottom: -50px;
      right: -50px;
    }

    /* Заголовок */
    .header {
      text-align: center;
      margin-bottom: 2.5rem;
      position: relative;
      padding-bottom: 1.5rem;
    }

    .header::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      width: 150px;
      height: 3px;
      background: linear-gradient(90deg, transparent, var(--pulse), var(--accent), transparent);
      border-radius: 3px;
    }

    .void-title {
      font-size: 3.5rem;
      letter-spacing: 4px;
      text-transform: uppercase;
      margin-bottom: 0.5rem;
      font-weight: 800;
      background: linear-gradient(45deg, var(--pulse), var(--accent), var(--gold));
      -webkit-background-clip: text;
      background-clip: text;
      color: transparent;
      position: relative;
      text-shadow: 0 5px 15px rgba(0, 255, 255, 0.2);
    }

    .void-sub {
      font-size: 1.1rem;
      letter-spacing: 1px;
      opacity: 0.8;
      margin-top: 0.5rem;
      font-weight: 300;
    }

    /* Поля ввода/вывода */
    .io-container {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
      margin-bottom: 2rem;
    }

    .io-field {
      position: relative;
    }

    .io-label {
      position: absolute;
      top: -10px;
      left: 15px;
      background: var(--dark);
      padding: 0 10px;
      font-size: 0.9rem;
      color: var(--pulse);
      z-index: 2;
    }

    textarea {
      width: 100%;
      padding: 1.2rem;
      background: rgba(10, 10, 20, 0.7);
      border: 1px solid rgba(138, 43, 226, 0.3);
      border-radius: 12px;
      color: var(--x);
      font-size: 1rem;
      resize: vertical;
      transition: var(--transition);
      box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.5);
      min-height: 120px;
      font-family: 'Courier New', monospace;
    }

    textarea:focus {
      outline: none;
      border-color: var(--pulse);
      box-shadow: 
        inset 0 0 15px rgba(0, 255, 255, 0.2),
        0 0 20px rgba(0, 255, 255, 0.1);
    }

    #inputText {
      background: rgba(10, 15, 30, 0.6);
    }

    #outputText {
      background: rgba(20, 10, 30, 0.6);
    }

    /* Кнопки */
    .buttons-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
      gap: 1.2rem;
      margin-bottom: 2rem;
    }

    .void-btn {
      background: linear-gradient(145deg, rgba(15, 15, 30, 0.8), rgba(10, 10, 20, 0.9));
      border: none;
      color: var(--x);
      padding: 1rem 0.5rem;
      cursor: pointer;
      text-transform: uppercase;
      letter-spacing: 1px;
      font-size: 0.85rem;
      font-weight: 600;
      transition: var(--transition);
      border-radius: 12px;
      position: relative;
      overflow: hidden;
      box-shadow: 
        0 5px 15px rgba(0, 0, 0, 0.3),
        inset 0 0 5px rgba(255, 255, 255, 0.05);
      display: flex;
      align-items: center;
      justify-content: center;
      white-space: nowrap;
      min-height: 50px;
    }

    .void-btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(0, 255, 255, 0.1), transparent);
      transition: 0.6s;
    }

    .void-btn:hover {
      transform: translateY(-3px);
      box-shadow: 
        0 8px 25px rgba(0, 255, 255, 0.25),
        inset 0 0 10px rgba(255, 255, 255, 0.1);
    }

    .void-btn:hover::before {
      left: 100%;
    }

    .void-btn:active {
      transform: translateY(1px);
    }

    .action-btn {
      background: linear-gradient(145deg, rgba(0, 100, 200, 0.2), rgba(138, 43, 226, 0.25));
      color: var(--gold);
    }

    .action-btn:hover {
      background: linear-gradient(145deg, rgba(0, 150, 255, 0.3), rgba(160, 70, 240, 0.35));
    }

    /* Футер */
    .footer {
      text-align: center;
      margin-top: 2rem;
      padding-top: 1.5rem;
      border-top: 1px solid rgba(255, 255, 255, 0.1);
      font-size: 0.9rem;
      color: var(--silver);
      letter-spacing: 0.5px;
    }

    .version {
      color: var(--pulse);
      font-weight: bold;
    }

    /* Анимация вывода */
    .output-glow {
      animation: glow 1.5s ease-out;
    }

    @keyframes glow {
      0% { box-shadow: inset 0 0 5px rgba(0, 255, 255, 0.3); }
      50% { box-shadow: inset 0 0 20px rgba(138, 43, 226, 0.5); }
      100% { box-shadow: inset 0 0 5px rgba(0, 255, 255, 0.3); }
    }

    /* Адаптивность */
    @media (max-width: 768px) {
      .container {
        padding: 1.5rem;
      }
      
      .void-title {
        font-size: 2.5rem;
      }
      
      .buttons-grid {
        grid-template-columns: 1fr 1fr;
      }
      
      .void-btn {
        font-size: 0.8rem;
        padding: 0.9rem 0.4rem;
      }
    }

    @media (max-width: 480px) {
      .void-title {
        font-size: 2rem;
      }
      
      .buttons-grid {
        grid-template-columns: 1fr;
      }
      
      .void-btn {
        font-size: 0.85rem;
        padding: 0.9rem 0.5rem;
      }
    }
  </style>
</head>
<body>
  <div class="particles" id="particles"></div>
  <div class="abstract-shapes">
    <div class="shape"></div>
    <div class="shape"></div>
  </div>

  <div class="container">
    <div class="header">
      <h1 class="void-title">VOIDX</h1>
      <div class="void-sub">ПРЕМИУМ ШИФРОВАНИЕ | СЕКРЕТНЫЙ КОД | АБСОЛЮТНАЯ КОНФИДЕНЦИАЛЬНОСТЬ</div>
    </div>
    
    <div class="io-container">
      <div class="io-field">
        <div class="io-label">Исходный текст</div>
        <textarea 
          id="inputText" 
          placeholder="Введите текст для шифрования или расшифровки..."
          rows="4"
        >Съешь же ещё этих мягких французских булок, да выпей чаю</textarea>
      </div>
      
      <div class="io-field">
        <div class="io-label">Результат</div>
        <textarea 
          id="outputText" 
          placeholder="Здесь появится результат..."
          rows="4"
          readonly
        ></textarea>
      </div>
    </div>
    
    <div class="buttons-grid">
      <button class="void-btn action-btn" onclick="encrypt()">
        Зашифровать
      </button>
      <button class="void-btn action-btn" onclick="decrypt()">
        Расшифровать
      </button>
      <button class="void-btn" onclick="copyToClipboard()">
        <i class="fas fa-copy"></i> Копировать
      </button>
      <button class="void-btn" onclick="clearAll()">
        <i class="fas fa-eraser"></i> Очистить
      </button>
    </div>
    
    <div class="footer">
      <div class="version">VOIDX v3.0</div>
      <div>Система активна | Защищённый канал | Все операции шифруются</div>
    </div>
  </div>

  <script>
    // Создаем эффект частиц
    function createParticles() {
      const particlesContainer = document.getElementById('particles');
      const particleCount = 100;
      
      for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.classList.add('particle');
        
        // Случайные начальные позиции
        const posX = Math.random() * 100;
        const posY = Math.random() * 100;
        particle.style.left = `${posX}%`;
        particle.style.top = `${posY}%`;
        
        // Случайные размеры и задержки
        const size = Math.random() * 3 + 1;
        particle.style.width = `${size}px`;
        particle.style.height = `${size}px`;
        
        // Случайные параметры анимации
        const duration = Math.random() * 20 + 10;
        const delay = Math.random() * 5;
        const xVar = (Math.random() - 0.5) * 200;
        
        particle.style.setProperty('--x', xVar);
        particle.style.animation = `particleAnim ${duration}s linear ${delay}s infinite`;
        
        particlesContainer.appendChild(particle);
      }
    }
    
    // Расширенная карта кода Морзе для поддержки английского
    const morseMap = {
      // Русские символы
      "а":"?!","б":"!???","в":"?!!","г":"!!?","д":"!??","е":"?","ё":"?!.?","ж":"???!",
      "з":"!!??","и":"??","й":"?!!!","к":"!?!","л":"?!!?","м":"!!","н":"!?","о":"!!!",
      "п":"?!!?!","р":"?!?","с":"???","т":"!","у":"??!","ф":"??!?","х":"????","ц":"!?!?",
      "ч":"!!!?","ш":"!!!!","щ":"!!?!","ъ":"!!?!!","ы":"!?!!","ь":"!??!","э":"??!??","ю":"??!!","я":"?!?!",
      
      // Английские символы
      "a": ".-", "b": "-...", "c": "-.-.", "d": "-..", "e": ".", "f": "..-.", 
      "g": "--.", "h": "....", "i": "..", "j": ".---", "k": "-.-", "l": ".-..", 
      "m": "--", "n": "-.", "o": "---", "p": ".--.", "q": "--.-", "r": ".-.", 
      "s": "...", "t": "-", "u": "..-", "v": "...-", "w": ".--", "x": "-..-", 
      "y": "-.--", "z": "--..",
      
      // Цифры и символы
      "0":"-----","1":".----","2":"..---","3":"...--","4":"....-","5":".....",
      "6":"-....","7":"--...","8":"---..","9":"----.",
      ".":".-.-.-", ",":"--..--", "?":"..--..", "!":"-.-.--", "-":"-....-", "/":"-..-.", ":":"---...", "\"":".-..-.", "@":".--.-.",
      " ":"/"
    };
    
    // Обратная карта для дешифрования
    const reverseMap = Object.entries(morseMap).reduce((acc, [key, val]) => {
      acc[val] = key;
      return acc;
    }, {});
    
    // Анимация результата
    function animateOutput() {
      const out = document.getElementById('outputText');
      out.classList.add('output-glow');
      setTimeout(() => out.classList.remove('output-glow'), 1500);
    }
    
    // Шифрование
    function encrypt() {
      let text = document.getElementById('inputText').value.toLowerCase();
      if (!text.trim()) return;
      
      let res = '';
      for(const ch of text) {
        if(morseMap[ch]) {
          res += morseMap[ch] + ' ';
        } else {
          res += ch + ' ';
        }
      }
      
      const result = res.trim();
      document.getElementById('outputText').value = result;
      animateOutput();
    }
    
    // Дешифрование
    function decrypt() {
      let raw = document.getElementById('inputText').value.trim();
      if (!raw) return;
      
      let res = '';
      const words = raw.split(' / ');
      
      for (let i = 0; i < words.length; i++) {
        const tokens = words[i].split(/\s+/);
        for (const token of tokens) {
          if (reverseMap[token]) {
            res += reverseMap[token];
          } else {
            // Если символ не найден, оставляем как есть
            res += token;
          }
        }
        if (i < words.length - 1) res += ' ';
      }
      
      document.getElementById('outputText').value = res;
      animateOutput();
    }
    
    // Копирование в буфер обмена
    function copyToClipboard() {
      const output = document.getElementById('outputText');
      if (!output.value.trim()) return;
      
      navigator.clipboard.writeText(output.value);
      
      // Визуальное подтверждение
      const btn = event.currentTarget;
      const originalHtml = btn.innerHTML;
      btn.innerHTML = '<i class="fas fa-check"></i> Скопировано!';
      btn.style.background = 'linear-gradient(145deg, rgba(0, 150, 0, 0.3), rgba(0, 100, 0, 0.25))';
      
      setTimeout(() => {
        btn.innerHTML = originalHtml;
        btn.style.background = 'linear-gradient(145deg, rgba(15, 15, 30, 0.8), rgba(10, 10, 20, 0.9))';
      }, 2000);
    }
    
    // Очистка полей
    function clearAll() {
      document.getElementById('inputText').value = '';
      document.getElementById('outputText').value = '';
    }
    
    // Инициализация
    document.addEventListener('DOMContentLoaded', () => {
      createParticles();
      
      // Автоматическое шифрование при загрузке
      setTimeout(encrypt, 500);
    });
  </script>
</body>
</html>
